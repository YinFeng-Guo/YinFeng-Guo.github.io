<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[郭银锋]]></title>
  <subtitle><![CDATA[Web Platform, Cloud and Mobile Application Development]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://guoyinfeng.info/"/>
  <updated>2014-04-12T05:35:31.666Z</updated>
  <id>http://guoyinfeng.info/</id>
  
  <author>
    <name><![CDATA[郭银锋]]></name>
    <email><![CDATA[guoyinfeng@live.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Javascript 严格模式清单]]></title>
    <link href="http://guoyinfeng.info/2014/04/12/javascript-%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F%E6%B8%85%E5%8D%95/"/>
    <id>http://guoyinfeng.info/2014/04/12/javascript-严格模式清单/</id>
    <published>2014-04-12T03:32:36.000Z</published>
    <updated>2014-04-12T03:39:07.000Z</updated>
    <content type="html"><![CDATA[<p>收集汇总有哪些在严格模式下会出错<br><a id="more"></a></p>
<h3 id="1-_eval_-548c-_arguments">1. eval 和 arguments</h3>
<p>这两个名字不能作为标示符或者属性名</p>
<h3 id="2-_-53d8-91cf-6ca1-58f0-660e-">2. 变量没声明</h3>
<p>抛出ReferenceError错误</p>
]]></content>
    <summary type="html"><![CDATA[<p>收集汇总有哪些在严格模式下会出错<br>]]></summary>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript系统学习 第13章]]></title>
    <link href="http://guoyinfeng.info/2014/04/12/javascript%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-%E7%AC%AC13%E7%AB%A0/"/>
    <id>http://guoyinfeng.info/2014/04/12/javascript系统学习-第13章/</id>
    <published>2014-04-11T23:45:45.000Z</published>
    <updated>2014-04-11T23:47:21.000Z</updated>
    <content type="html"><![CDATA[]]></content>
    
    
      <category term="Learning" scheme="http://guoyinfeng.info/tags/Learning/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript系统学习 第12章]]></title>
    <link href="http://guoyinfeng.info/2014/04/12/javascript%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-%E7%AC%AC12%E7%AB%A0/"/>
    <id>http://guoyinfeng.info/2014/04/12/javascript系统学习-第12章/</id>
    <published>2014-04-11T23:45:35.000Z</published>
    <updated>2014-04-11T23:47:27.000Z</updated>
    <content type="html"><![CDATA[]]></content>
    
    
      <category term="Learning" scheme="http://guoyinfeng.info/tags/Learning/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript系统学习 第11章]]></title>
    <link href="http://guoyinfeng.info/2014/04/12/javascript%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-%E7%AC%AC11%E7%AB%A0/"/>
    <id>http://guoyinfeng.info/2014/04/12/javascript系统学习-第11章/</id>
    <published>2014-04-11T23:45:26.000Z</published>
    <updated>2014-04-11T23:47:23.000Z</updated>
    <content type="html"><![CDATA[]]></content>
    
    
      <category term="Learning" scheme="http://guoyinfeng.info/tags/Learning/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript系统学习 第10章]]></title>
    <link href="http://guoyinfeng.info/2014/04/12/javascript%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-%E7%AC%AC10%E7%AB%A0/"/>
    <id>http://guoyinfeng.info/2014/04/12/javascript系统学习-第10章/</id>
    <published>2014-04-11T23:45:21.000Z</published>
    <updated>2014-04-11T23:47:30.000Z</updated>
    <content type="html"><![CDATA[]]></content>
    
    
      <category term="Learning" scheme="http://guoyinfeng.info/tags/Learning/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript系统学习 第9章]]></title>
    <link href="http://guoyinfeng.info/2014/04/12/javascript%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-%E7%AC%AC9%E7%AB%A0/"/>
    <id>http://guoyinfeng.info/2014/04/12/javascript系统学习-第9章/</id>
    <published>2014-04-11T23:45:15.000Z</published>
    <updated>2014-04-11T23:47:06.000Z</updated>
    <content type="html"><![CDATA[]]></content>
    
    
      <category term="Learning" scheme="http://guoyinfeng.info/tags/Learning/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript系统学习 第8章]]></title>
    <link href="http://guoyinfeng.info/2014/04/12/javascript%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-%E7%AC%AC8%E7%AB%A0/"/>
    <id>http://guoyinfeng.info/2014/04/12/javascript系统学习-第8章/</id>
    <published>2014-04-11T23:45:10.000Z</published>
    <updated>2014-04-11T23:47:02.000Z</updated>
    <content type="html"><![CDATA[]]></content>
    
    
      <category term="Learning" scheme="http://guoyinfeng.info/tags/Learning/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript系统学习 第7章]]></title>
    <link href="http://guoyinfeng.info/2014/04/12/javascript%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-%E7%AC%AC7%E7%AB%A0/"/>
    <id>http://guoyinfeng.info/2014/04/12/javascript系统学习-第7章/</id>
    <published>2014-04-11T23:45:06.000Z</published>
    <updated>2014-04-11T23:46:55.000Z</updated>
    <content type="html"><![CDATA[]]></content>
    
    
      <category term="Learning" scheme="http://guoyinfeng.info/tags/Learning/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript系统学习 第6章]]></title>
    <link href="http://guoyinfeng.info/2014/04/12/javascript%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-%E7%AC%AC6%E7%AB%A0/"/>
    <id>http://guoyinfeng.info/2014/04/12/javascript系统学习-第6章/</id>
    <published>2014-04-11T23:44:52.000Z</published>
    <updated>2014-04-11T23:46:52.000Z</updated>
    <content type="html"><![CDATA[]]></content>
    
    
      <category term="Learning" scheme="http://guoyinfeng.info/tags/Learning/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript系统学习 第5章]]></title>
    <link href="http://guoyinfeng.info/2014/04/12/javascript%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-%E7%AC%AC5%E7%AB%A0/"/>
    <id>http://guoyinfeng.info/2014/04/12/javascript系统学习-第5章/</id>
    <published>2014-04-11T23:44:48.000Z</published>
    <updated>2014-04-11T23:47:40.000Z</updated>
    <content type="html"><![CDATA[]]></content>
    
    
      <category term="Learning" scheme="http://guoyinfeng.info/tags/Learning/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript系统学习 第4章 变量、作用域和内存问题]]></title>
    <link href="http://guoyinfeng.info/2014/04/12/javascript%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-%E7%AC%AC4%E7%AB%A0/"/>
    <id>http://guoyinfeng.info/2014/04/12/javascript系统学习-第4章/</id>
    <published>2014-04-11T23:44:32.000Z</published>
    <updated>2014-04-12T05:35:09.000Z</updated>
    <content type="html"><![CDATA[<p>变量其实没有那么简单。<br>我们在开发种需要考虑的问题：</p>
<ul>
<li>传值还是传址</li>
<li>垃圾回收怎么做比较好</li>
<li><p>基本数据类型和复杂数据类型的区别是什么<br><a id="more"></a></p>
<h1 id="-4e00-3001-53d8-91cf-7c7b-578b-">一、变量类型</h1>
<p>在js里面只有两种变量类型，基本类型和引用类型。<br>这里要和数据类型分开。</p>
<h3 id="1-1_-52a8-6001-5c5e-6027-">1.1 动态属性</h3>
<p>只有引用类型的变量可以增加属性</p>
<p>  a.name = ‘test’;</p>
</li>
</ul>
<p>如果是基本类型，虽然不报错，但是不报错</p>
<h3 id="1-2_-53d8-91cf-590d-5236-">1.2 变量复制</h3>
<p>对于基本类型是复制的变量本身, 原变量和新复制的变量，是两个完全独立的变量。<br>下面的代码一看就明白：</p>
<pre><code><span class="title">var</span> a = <span class="number">3</span>;
<span class="title">var</span> b = a;
<span class="title">b</span>++;
<span class="title">alert</span>(a);
</code></pre><p>对于引用类型的变量，复制的不是变量本身，而是复制的变量的引用，也就是说，新复制的变量改变了，原来的旧变量也会一直变。因为两个变量都指向同一个堆内存里面的对象。<br>测试的代码：</p>
<pre><code><span class="title">var</span> person = new <span class="type">Object</span>();
<span class="title">person</span>.name = 'a';
<span class="title">var</span> personClone = person;
<span class="title">personClone</span>.name = 'clonea';
<span class="title">alert</span>(person.name);
</code></pre><h3 id="1-3_-4f20-53c2-6570-">1.3 传参数</h3>
<p>当我们调用函数的时候，到底是传址还是传值，是一件有讲究的事情。<br>在js里面都是传值调用。<br>但是你可能直接看起来会有点困惑，请见下面的代码。<br><em>代码1</em></p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">code1</span><span class="params">(num)</span>{</span>
    num++;
    <span class="keyword">return</span> num;
}
<span class="keyword">var</span> v = <span class="number">10</span>;
<span class="keyword">var</span> result = code1(v);
console.log(v);<span class="comment">//10</span>
console.log(result);<span class="comment">//11</span>
</code></pre><p><em>代码2</em>    </p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">setName</span><span class="params">(person)</span><span class="comment">{
    person.name = 'Jack';
}</span>
<span class="title">var</span> <span class="title">jack</span> = <span class="title">new</span> <span class="title">Object</span><span class="params">()</span>;</span>
jack.name = <span class="string">'test'</span>;
setName(jack);
console.log(jack.name);<span class="comment">//Jack</span>
</code></pre><p><em>代码3</em></p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">setName</span><span class="params">(person)</span><span class="comment">{
    person.name = 'Jack';
    person = new Object();
    person.name = 'Lily';
}</span>
<span class="title">var</span> <span class="title">jack</span> = <span class="title">new</span> <span class="title">Object</span><span class="params">()</span>;</span>
jack.name = <span class="string">'test'</span>;
setName(jack);
console.log(jack.name);<span class="comment">//Jack    </span>
</code></pre><p>代码1，定义的变量没有受影响，说明是传值<br>代码2，定义的变量被函数改变了，好像是传址调用<br>代码3，定义的变量是变了，但是没有变成’Lily’,说明是传值</p>
<p>综上所述，传参数都是传值调用。</p>
<h3 id="1-4_typeof_-548c-_instanceof_-7684-533a-522b-">1.4 typeof 和 instanceof 的区别</h3>
<p>利用typeof可以区分变量是不是四种类型：字符串、数值、布尔值、还是undefined<br>需要注意的是，如果判断null，会返回object。<br>使用语法：</p>
<pre><code><span class="keyword">var</span> v = <span class="string">'test'</span>;
console.log(<span class="keyword">typeof</span> v);<span class="comment">//string</span>
</code></pre><p>也就是说typeof只对基本数据类型的四种会有作用。</p>
<p>可是如果想判断一个变量是那种类型的对象，我们需要用到instanceof<br>使用语法：</p>
<pre><code>result ＝ variable instanceof <span class="function"><span class="keyword">constructor</span>;</span>    
</code></pre>]]></content>
    <summary type="html"><![CDATA[<p>变量其实没有那么简单。<br>我们在开发种需要考虑的问题：</p>
<ul>
<li>传值还是传址</li>
<li>垃圾回收怎么做比较好</li>
<li><p>基本数据类型和复杂数据类型的区别是什么<br>]]></summary>
    
      <category term="Learning" scheme="http://guoyinfeng.info/tags/Learning/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript系统学习 第3章 基本概念]]></title>
    <link href="http://guoyinfeng.info/2014/04/12/javascript%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-%E7%AC%AC3%E7%AB%A0/"/>
    <id>http://guoyinfeng.info/2014/04/12/javascript系统学习-第3章/</id>
    <published>2014-04-11T23:44:25.000Z</published>
    <updated>2014-04-12T03:49:55.000Z</updated>
    <content type="html"><![CDATA[<p>像学英语一样，学习javascript也需要学习单词和语法。<br>我个人觉得需要仔细学习的是使用频率在初学者种用的不是很多操作符，比作位操作符，逗号操作符等，需要考虑这些操作符在开发中有什么帮助。<br>关于语句，不要只熟悉很普通的，有些用的也不是很多，比如for-in语句, label语句，with语句等<br><a id="more"></a></p>
<h2 id="-4e00-3001-8bed-6cd5-">一、语法</h2>
<h3 id="1-1_-533a-5206-5927-5c0f-5199-">1.1 区分大小写</h3>
<h3 id="1-2_-6807-793a-7b26-">1.2 标示符</h3>
<p>最佳实践：驼峰大小写格式，第一个字母小写，剩下的每个单词首字母大写</p>
<h3 id="1-3_-6ce8-91ca-">1.3 注释</h3>
<p>目的是提高可读性</p>
<h3 id="1-4_-4e25-683c-6a21-5f0f-">1.4 严格模式</h3>
<p>javasript是一种解释型的语言，所以很多错误只有只运行的时候才会提示。<br>比如少了引号，少了括号这种很简单的错误。<br>所以如果也可以像编译型的语言，能够在保存后就能提示我们错误，对开发帮助会很大。<br>在ECMAScript 5引入了严格模式(strict mode)，可以帮我们解决这个问题。<br>使用方式有两种：</p>
<ul>
<li><p>在顶部添加如下代码：</p>
<pre><code>  <span class="string">"use strict"</span><span class="comment">;</span>
</code></pre></li>
<li><p>在函数内部的上方包含</p>
<pre><code>  <span class="function"><span class="keyword">function</span> <span class="title">doSomething</span><span class="params">()</span>{</span>
      <span class="string">"use strict"</span>;
      <span class="comment">//函数体</span>
  }
</code></pre></li>
</ul>
<p>“use strict”看起来像是字符串，而且也没有赋值给任何变量，启示它是一个编译指示（pragma）<br>不过直接加上上面的代码，帮助不是很大，我们还需要插件配合使用，我知道比较好用的是<a href="http://www.jshint.com/" target="_blank">JSHint</a><br>还有一种叫做<a href="http://jslint.com/" target="_blank">JSLint</a></p>
<h3 id="1-5_-8bed-53e5-">1.5 语句</h3>
<h4 id="1-5-1_-5206-53f7-">1.5.1 分号</h4>
<p>要把加上分号当作一种习惯，因为：</p>
<ul>
<li>可读性强</li>
<li>避免错误，例如不完整的输入</li>
<li>没有分号，会导致代码压缩的时候报错</li>
<li>省略分号，会由解释器确定语句的结尾。加上分号后，解释器就不必再花实践推测应该在哪里插入分号了。</li>
</ul>
<h4 id="1-5-2_-82b1-62ec-53f7-">1.5.2 花括号</h4>
<p>最佳实践：始终在控制语句中使用代码块（代码块以花括号开头，以花括号结尾）。<br>使用了花括号，可以让编码意图更加清晰，而且也能降低修改代码时出错的机率。</p>
<h2 id="-4e8c-3001-5173-952e-5b57-548c-4fdd-7559-5b57-">二、关键字和保留字</h2>
<p>只要记住不要使用关键字和保留字作为标示符就可以，避开。<br>如果遇到错误”Identifier Expected”，考虑下是不是使用了关键字或保留字。</p>
<h2 id="-4e09-3001-53d8-91cf-">三、变量</h2>
<h3 id="3-1_-4f7f-7528-">3.1 使用</h3>
<p>松散类型或类型，定义使用关键字var</p>
<h3 id="3-2_-53d8-91cf-4f5c-7528-57df-">3.2 变量作用域</h3>
<p>用var定义的变量会有作用域。<br>比如在函数里定义的变量，函数运行结束后，变量即被销毁。<br>入股省略了var，创建的就是一个全局变量，即使在函数中定义的，函数外部也能访问。<br>不过不推荐省略var，这样不好维护代码，容易造成混乱。</p>
<h2 id="-56db-3001-6570-636e-7c7b-578b-">四、数据类型</h2>
<p>5种基本数据类型和一种复杂数据类型</p>
<h2 id="-4e94-3001-64cd-4f5c-7b26-">五、操作符</h2>
<h2 id="-516d-3001-8bed-53e5-">六、语句</h2>
<h2 id="-4e03-3001-51fd-6570-">七、函数</h2>
]]></content>
    <summary type="html"><![CDATA[<p>像学英语一样，学习javascript也需要学习单词和语法。<br>我个人觉得需要仔细学习的是使用频率在初学者种用的不是很多操作符，比作位操作符，逗号操作符等，需要考虑这些操作符在开发中有什么帮助。<br>关于语句，不要只熟悉很普通的，有些用的也不是很多，比如for-in语句, label语句，with语句等<br>]]></summary>
    
      <category term="Learning" scheme="http://guoyinfeng.info/tags/Learning/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript系统学习 第2章 使用Javascript]]></title>
    <link href="http://guoyinfeng.info/2014/04/11/javascript%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-%E7%AC%AC2%E7%AB%A0/"/>
    <id>http://guoyinfeng.info/2014/04/11/javascript系统学习-第2章/</id>
    <published>2014-04-11T06:26:12.000Z</published>
    <updated>2014-04-12T02:25:44.000Z</updated>
    <content type="html"><![CDATA[<p>在之前，javascript只是用来对客户端进行一些简单的验证，或帮助实现一些前端效果，之前的确不被看好。<br>可是随着发展，现在已经可以full stack来开发一个完整的系统，比如<a href="http://www.mean.io/" target="_blank">mean</a>.<br>给我的感觉是学习成本降低，开发效率高，调试部署方便，还有一些比较好的工具可以使用，比如<a href="yeoman.io">yeoman</a>.<br>对开发者来说，还有一些重要的地方就是，伙伴多，社区多，可以直接使用的库很多，比如npmjs里能发现很多常用的库。<br>怎么使用javascript，就涉及到javascript的宿主。<br><a id="more"></a></p>
<h2 id="-4e00-3001-HTML">一、HTML</h2>
<h3 id="1-1_script-5143-7d20-">1.1 script元素</h3>
<p>script有6个属性: async, charset, defer, language, src, type<br>一般我们使用的时候，可能都只使用了src和type</p>
<h2 id="-4e8c-3001-Node">二、Node</h2>
<h2 id="-4e09-3001-Adobe_Flash">三、Adobe Flash</h2>
]]></content>
    <summary type="html"><![CDATA[<p>在之前，javascript只是用来对客户端进行一些简单的验证，或帮助实现一些前端效果，之前的确不被看好。<br>可是随着发展，现在已经可以full stack来开发一个完整的系统，比如<a href="http://www.mean.io/" target="_blank">mean</a>.<br>给我的感觉是学习成本降低，开发效率高，调试部署方便，还有一些比较好的工具可以使用，比如<a href="yeoman.io">yeoman</a>.<br>对开发者来说，还有一些重要的地方就是，伙伴多，社区多，可以直接使用的库很多，比如npmjs里能发现很多常用的库。<br>怎么使用javascript，就涉及到javascript的宿主。<br>]]></summary>
    
      <category term="Learning" scheme="http://guoyinfeng.info/tags/Learning/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Table框架整理]]></title>
    <link href="http://guoyinfeng.info/2014/04/11/table%E6%A1%86%E6%9E%B6%E6%95%B4%E7%90%86/"/>
    <id>http://guoyinfeng.info/2014/04/11/table框架整理/</id>
    <published>2014-04-11T05:49:03.000Z</published>
    <updated>2014-04-11T05:49:23.000Z</updated>
    <content type="html"><![CDATA[<p>收集整理一些table的插件，方便我们在开发中实现分页，列排序，列过滤，内容搜索<br><a id="more"></a></p>
<h2 id="-3c-a_href-3d-22-http-3a-2f-2f-www-trirand-com-2f-blog-2f-22-3e-jqGrid-3c-2f-a-3e-"><a href="http://www.trirand.com/blog/" target="_blank">jqGrid</a></h2>
<p>jqGrid 是一个用来显示网格数据的jQuery插件，文档比较全面，附带中文版本。<br><a href="http://www.trirand.com/jqgridwiki/doku.php?id=wiki:table_to_jqgrid" target="_blank">http://www.trirand.com/jqgridwiki/doku.php?id=wiki:table_to_jqgrid</a><br>主要特点:</p>
<ul>
<li>Full control with JavaScript API</li>
<li>Data returned from the server is XML</li>
<li>Simple configuration</li>
<li>Ability to load big datasets (paging)</li>
<li>Resizable columns</li>
<li>Server-side sorting</li>
<li>Support of links, images, checkboxes</li>
<li>You can add more than one grid on a sigle page (master-detail)</li>
<li>Paging</li>
</ul>
<h2 id="-3c-a_href-3d-22-http-3a-2f-2f-datatables-net-2f-22-3e-Datatables-3c-2f-a-3e-"><a href="http://datatables.net/" target="_blank">Datatables</a></h2>
<p>DataTables是一个jQuery的表格插件。这是一个高度灵活的工具，依据的基础逐步增强，这将增加先进的互动控制，支持任何HTML表格。<br>主要特点：</p>
<ul>
<li>自动分页处理</li>
<li>即时表格数据过滤</li>
<li>数据排序以及数据类型自动检测</li>
<li>自动处理列宽度</li>
<li>可通过CSS定制样式</li>
<li>支持隐藏列</li>
<li>易用</li>
<li>可扩展性和灵活性</li>
<li>国际化</li>
<li>动态创建表格</li>
<li>免费的</li>
</ul>
<h2 id="-3c-a_href-3d-22-http-3a-2f-2f-tablefilter-free-fr-2f-22-3e-Tablefilter-3c-2f-a-3e-"><a href="http://tablefilter.free.fr/" target="_blank">Tablefilter</a></h2>
<p>Table filtering/sorting/paging on steroids. Multi-column sorting and filtering.<br>tableFilter allows you to do simple client-side pagination, as well as auto-filtering and auto-sorting on multiple columns simultaneously using ctrl-click. If jquery.cookies is present, it will remember custom settings automatically. tableFilter also supports plugins for added functionality such as automatic aggregation for columns of numeric data (sum/avg/min/max). All of this yours for the low, low price of $(‘table’).tableFilter(); See site for details and demos.</p>
]]></content>
    <summary type="html"><![CDATA[<p>收集整理一些table的插件，方便我们在开发中实现分页，列排序，列过滤，内容搜索<br>]]></summary>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript系统学习 第1章 Javascript 简介]]></title>
    <link href="http://guoyinfeng.info/2014/04/11/javascript%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-%E7%AC%AC1%E7%AB%A0/"/>
    <id>http://guoyinfeng.info/2014/04/11/javascript系统学习-第1章/</id>
    <published>2014-04-11T00:18:56.000Z</published>
    <updated>2014-04-12T02:06:33.000Z</updated>
    <content type="html"><![CDATA[<p>关于介绍javascript的书籍或教程一般都会介绍下历史。我发现我对javascript的历史，其实没兴趣，比如是怎么开始这个语言的，各个公司的标准是如何发展，以及最后是怎么统一的，对初学的人帮助不是很大。<br>从我的角度，比较重要的是告诉我</p>
<ul>
<li>哪个标准是最权威的</li>
<li>我学习的时候应该从什么地方得到官方信息</li>
<li>开发的时候怎么查看文档</li>
<li>对某一个object的某一个方法，如果不知道不熟悉，在哪里可以查到用法</li>
<li>哪些工具会对开发比较有帮助<a id="more"></a>


</li>
</ul>
<h1 id="-4e00-3001-6807-51c6-">一、标准</h1>
<h3 id="1-1_ECMA-262">1.1 ECMA-262</h3>
<p>对一个语言，没有标准是非常痛苦的一件事情。<br>开发一个功能，要打开5个浏览器测试，对一个浏览器要测试几个不同版本，这是一件非常痛苦的事情。<br>所以某某部门就开始组织制定标准，标准的名字是ECMA-262。<br>ECMA-262也有不同的版本，现在最新的标准版本是v5，v6正在完成。</p>
<h3 id="1-2_ECMAScript">1.2 ECMAScript</h3>
<p>ECMAScript是一种由Ecma组织通过ECMA-262标准化的脚本程序设计语言。<br>ECMAScript是对标准ECMA-262规定的各个方面内容的语言的描述，可以把ECMAScript看做是“伪语言”。<br>ECMA-262现在是v5，ECMAScript也有对应的ECMAScript5。</p>
<h3 id="1-3_JavaScript-2c-_JScript_and_ActionScript">1.3 JavaScript, JScript and ActionScript</h3>
<p>JavaScript, JScript and ActionScript都是对ECMAScript的实现<br>但是JavaScript的方言特殊点，里面包含了ECMAScript, DOM, BOM<br>wiki的解释：<br>ECMAScript is the scripting language standardized by Ecma International in the ECMA-262 specification and ISO/IEC 16262. The language is widely used for client-side scripting on the web, in the form of several well-known implementations such as JavaScript, JScript and ActionScript.</p>
<h1 id="-4e8c-3001-5b98-65b9-6587-6863-">二、官方文档</h1>
<h3 id="2-1_ECMA-262">2.1 ECMA-262</h3>
<p>看这个意义不大，不过可以大概看下，帮助理解ECMAScript和ECMA-262的关系<br><a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm" target="_blank">Standard ECMA-262 ECMAScript® Language Specification</a><br><a href="http://www.ecma-international.org/ecma-262/5.1/" target="_blank">Standard ECMA-262 5.1 Edition / June 2011</a></p>
<h3 id="2-2_-3c-a_href-3d-22-http-3a-2f-2f-www-ecmascript-org-2f-22-3e-ECMAScript-3c-2f-a-3e-">2.2 <a href="http://www.ecmascript.org/" target="_blank">ECMAScript</a></h3>
<h1 id="-4e09-3001-5f00-53d1-6587-6863-">三、开发文档</h1>
<h3 id="3-1_-3c-a_href-3d-22-http-3a-2f-2f-www-ibm-com-2f-developerworks-2f-cn-2f-22-3e-IBM_developerWorks-3c-2f-a-3e-">3.1 <a href="http://www.ibm.com/developerworks/cn/" target="_blank">IBM developerWorks</a></h3>
<p><a href="http://www.ibm.com/developerworks/cn/web/wa-ecma262/index.html" target="_blank">ECMA-262，第 5 版</a></p>
<h3 id="3-2_-3c-a_href-3d-22-https-3a-2f-2f-developer-mozilla-org-2f-zh-CN-2f-22-3e-Mozilla_Developer_Network-3c-2f-a-3e-">3.2 <a href="https://developer.mozilla.org/zh-CN/" target="_blank">Mozilla Developer Network</a></h3>
<h3 id="3-3_-3c-a_href-3d-22-https-3a-2f-2f-developer-mozilla-org-2f-en-US-2f-docs-2f-Web-2f-JavaScript-2f-Reference-22-3e-JavaScript_reference-3c-2f-a-3e-">3.3 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference" target="_blank">JavaScript reference</a></h3>
<h1 id="-56db-3001-5de5-5177-">四、工具</h1>
<p><a href="http://guoyinfeng.info/2014/04/07/javascript-相关工具汇总/">Javascript 相关工具汇总</a></p>
]]></content>
    <summary type="html"><![CDATA[<p>关于介绍javascript的书籍或教程一般都会介绍下历史。我发现我对javascript的历史，其实没兴趣，比如是怎么开始这个语言的，各个公司的标准是如何发展，以及最后是怎么统一的，对初学的人帮助不是很大。<br>从我的角度，比较重要的是告诉我</p>
<ul>
<li>哪个标准是最权威的</li>
<li>我学习的时候应该从什么地方得到官方信息</li>
<li>开发的时候怎么查看文档</li>
<li>对某一个object的某一个方法，如果不知道不熟悉，在哪里可以查到用法</li>
<li>哪些工具会对开发比较有帮助]]></summary>
    
      <category term="Learning" scheme="http://guoyinfeng.info/tags/Learning/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Javascript 相关工具汇总]]></title>
    <link href="http://guoyinfeng.info/2014/04/07/javascript-%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/"/>
    <id>http://guoyinfeng.info/2014/04/07/javascript-相关工具汇总/</id>
    <published>2014-04-07T04:38:21.000Z</published>
    <updated>2014-04-07T08:15:14.000Z</updated>
    <content type="html"><![CDATA[<p>JavaScript是Web开发者不可或缺的一项技能，它可以为你的网站添加丰富的交互功能和绚丽的视觉效果，以此来增强用户体验。 </p>
<p>本文整理了10款非常优秀的在线JavaScript代码工具，涵盖编辑、压缩、美化、调试等功能，随时随地使用，大大节省你的开发成本和时间。<br><a id="more"></a></p>
<ul>
<li><p>jsfiddle.net<br>在线编辑工具——由HTML编辑器、CSS编辑器、JavaScript编辑器和输出界面4个部分组成，你可以方便地进行代码测试。 </p>
</li>
<li><p>jsbeautifier.org<br>在线美化工具——该工具可以处理你的凌乱的、压缩的JavaScript代码，使代码整齐并具有可读性。 </p>
</li>
<li><p>jsperf.com<br>在线JS测试用例——提供了一个简便的方式来创建和共享测试用例，并可以比较不同JavaScript代码段的性能。</p>
</li>
<li><p>jshint.com<br>在线JS检测工具——用于检测JavaScript代码中的错误和潜在问题。 </p>
</li>
<li><p>jsobfuscate.com<br>在线混淆工具——通过先进的算法，来混淆你的JavaScript代码，使其不可读。该工具还可以减小文件的大小，以便快速加载。 </p>
</li>
<li><p>regexpal.com<br>在线正则测试工具——在线测试正则表达式，以不同的形式返回结果，并可以生成JavaScript代码和链接。 </p>
</li>
<li><p>jsbin.com<br>在线编辑器——用于协同调试JavaScript代码。 </p>
</li>
<li><p>jsmini.com<br>在线压缩工具——用于压缩.js文件，以加快网站的加载速度。 </p>
</li>
<li><p>plunker.no.de<br>在线代码预览工具——允许你编辑、复制、预览网上的JavaScript代码片段。 </p>
</li>
<li><p>jspretty.com<br>在线美化工具——用于解压JavaScript和jQuery代码，以使代码可读。 </p>
</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<p>JavaScript是Web开发者不可或缺的一项技能，它可以为你的网站添加丰富的交互功能和绚丽的视觉效果，以此来增强用户体验。 </p>
<p>本文整理了10款非常优秀的在线JavaScript代码工具，涵盖编辑、压缩、美化、调试等功能，随时随地使用，大大节省你的开发成本和时间。<br>]]></summary>
    
      <category term="Friends" scheme="http://guoyinfeng.info/categories/Friends/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AngularJS 学习资源]]></title>
    <link href="http://guoyinfeng.info/2014/04/07/angularjs-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"/>
    <id>http://guoyinfeng.info/2014/04/07/angularjs-学习资源/</id>
    <published>2014-04-07T01:13:26.000Z</published>
    <updated>2014-04-07T01:14:29.000Z</updated>
    <content type="html"><![CDATA[<p>为了学习的更多<br><a id="more"></a><br><a href="http://html5.9tech.cn/news/2014/0106/39493.html" target="_blank">2013年度最强AngularJS资源合集</a></p>
]]></content>
    <summary type="html"><![CDATA[<p>为了学习的更多<br>]]></summary>
    
      <category term="AngularJS" scheme="http://guoyinfeng.info/tags/AngularJS/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ui-router 学习]]></title>
    <link href="http://guoyinfeng.info/2014/04/06/ui-router-%E5%AD%A6%E4%B9%A0/"/>
    <id>http://guoyinfeng.info/2014/04/06/ui-router-学习/</id>
    <published>2014-04-06T09:41:36.000Z</published>
    <updated>2014-04-06T09:43:52.000Z</updated>
    <content type="html"><![CDATA[<p>Angular-Ui 对于 AngularJS 开发者来说是一个非常重要的工具，其中 UI-Router 又是重中之重。<br><a id="more"></a></p>
<p>参考<br><a href="http://bubkoo.com/2014/01/02/angular/ui-router/guide/index/" target="_blank">学习 ui-router 系列文章索引</a><br><a href="http://grahamle.github.io/2013/11/ui-router/" target="_blank">http://grahamle.github.io/2013/11/ui-router/</a></p>
]]></content>
    <summary type="html"><![CDATA[<p>Angular-Ui 对于 AngularJS 开发者来说是一个非常重要的工具，其中 UI-Router 又是重中之重。<br>]]></summary>
    
      <category term="AngularJS" scheme="http://guoyinfeng.info/tags/AngularJS/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Fuel UX 使用指南]]></title>
    <link href="http://guoyinfeng.info/2014/04/06/fuel-ux-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://guoyinfeng.info/2014/04/06/fuel-ux-使用指南/</id>
    <published>2014-04-06T08:13:47.000Z</published>
    <updated>2014-04-06T08:30:54.000Z</updated>
    <content type="html"><![CDATA[<p>Fuel UX 扩展了 Bootstrap 提供额外的轻量级的 JavaScript 控制，易于安全、定制、更新和优化。<br><a id="more"></a><br><a href="http://exacttarget.github.io/fuelux/" target="_blank">Fuel UX</a></p>
]]></content>
    <summary type="html"><![CDATA[<p>Fuel UX 扩展了 Bootstrap 提供额外的轻量级的 JavaScript 控制，易于安全、定制、更新和优化。<br>]]></summary>
    
      <category term="Bootstrap" scheme="http://guoyinfeng.info/tags/Bootstrap/"/>
    
      <category term="Friends" scheme="http://guoyinfeng.info/categories/Friends/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AngularJS 小贴士]]></title>
    <link href="http://guoyinfeng.info/2014/04/06/angularjs-%E5%B0%8F%E8%B4%B4%E5%A3%AB/"/>
    <id>http://guoyinfeng.info/2014/04/06/angularjs-小贴士/</id>
    <published>2014-04-06T06:17:31.000Z</published>
    <updated>2014-04-06T06:18:01.000Z</updated>
    <content type="html"><![CDATA[<p>angularjs使用小贴士<br><a id="more"></a></p>
<h3 id="1-_-4f7f-7528-ng-bind-4ee3-66ff-53cc-62ec-53f7-">1. 使用ng-bind代替双括号</h3>
<h3 id="2-_-24-watch-53ef-4ee5-770b-4f5c-trigger">2. $watch可以看作trigger</h3>
<h3 id="3-_ng-repeat_-6307-4ee4-53ef-4ee5-901a-8fc7-24-index-8fd4-56de-5f53-524d-5f15-7528-7684-5143-7d20-5e8f-53f7-">3. ng-repeat 指令可以通过$index返回当前引用的元素序号</h3>
<h3 id="4-_-901a-8fc7-52a8-6001-7684-class-6765-5b9e-73b0-9875-9762-4e0d-540c-7684-4e3b-9898-ff0c-901a-8fc7-">4. 通过动态的class来实现页面不同的主题，通过</h3>
]]></content>
    <summary type="html"><![CDATA[<p>angularjs使用小贴士<br>]]></summary>
    
      <category term="AngularJS" scheme="http://guoyinfeng.info/tags/AngularJS/"/>
    
      <category term="Javascript" scheme="http://guoyinfeng.info/categories/Javascript/"/>
    
  </entry>
  
</feed>
